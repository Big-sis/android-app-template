apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 26
    defaultConfig {
        resConfigs "en", "fr"
        applicationId "fr.vyfe"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 20
        versionName "1.2.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        dev {
            storeFile file('/Users/vyfe/AndroidStudioProjects/toulouse-0218-java-vyfe/keystorev2.jks')
        }

        prod {
            storeFile file("../keystorev2.jks")
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }
    buildTypes {
        prod.initWith(buildTypes.release)
        prod {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "FIREBASE_DATABASE_URL", FIREBASE_DATABASE_URL_PROD
            buildConfigField "String", "DB_PREFIX", '"prod"'
            signingConfig signingConfigs.prod
        }
        staging {
            buildConfigField "String", "FIREBASE_DATABASE_URL", FIREBASE_DATABASE_URL_STAGING
            buildConfigField "String", "DB_PREFIX", '"staging"'
            signingConfig signingConfigs.prod
            debuggable true
        }
        dev.initWith(buildTypes.debug)
        dev {
            buildConfigField "String", "FIREBASE_DATABASE_URL", FIREBASE_DATABASE_URL_DEV
            buildConfigField "String", "DB_PREFIX", '"dev"'
            debuggable true
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    // Temporary fix until alpha10
    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }
}

repositories {
    mavenCentral()
}

configurations {
    cleanedAnnotations
    compile.exclude group: 'org.jetbrains' , module:'annotations'
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.volley:volley:1.1.0'
    implementation 'com.google.firebase:firebase-core:16.0.7'
    implementation 'com.google.firebase:firebase-database:16.1.0'
    implementation 'com.google.firebase:firebase-auth:16.1.0'
    implementation 'com.google.firebase:firebase-functions:16.2.0'
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    implementation 'com.vimeo.networking:vimeo-networking:1.1.3'
    implementation 'io.tus.java.client:tus-java-client:0.4.1'
    implementation 'io.tus.android.client:tus-android-client:0.1.8'
    annotationProcessor 'android.arch.lifecycle:compiler:1.1.1'
    api 'com.google.guava:guava:26.0-android'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.0.5-beta'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation 'org.hamcrest:hamcrest-integration:1.3'
    androidTestImplementation 'androidx.test:core:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.1'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.firebase:firebase-config:16.5.0'
}

android.variantFilter { variant ->
    if(variant.buildType.name.equals('release') || variant.buildType.name.equals('debug')) {
        variant.setIgnore(true)
    }
}

apply plugin: 'com.google.gms.google-services'
